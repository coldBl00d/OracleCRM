package model.UVO;

import model.AM.AppModuleAMImpl;

import oracle.adf.model.BindingContext;
import oracle.adf.model.binding.DCBindingContainer;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.DBSequence;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewObjectImpl;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.uicli.binding.JUCtrlHierBinding;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Aug 16 21:32:45 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AllUserRolePairUVORowImpl extends ViewRowImpl {
    public static final int ENTITY_USERSEO = 0;
    public static final int ENTITY_ROLESTABLEEO = 1;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        UserId,
        FirstName,
        MiddleName,
        LastName,
        Id,
        RoleName,
        AreAssociated,
        UserRoleLinkUVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int USERID = AttributesEnum.UserId.index();
    public static final int FIRSTNAME = AttributesEnum.FirstName.index();
    public static final int MIDDLENAME = AttributesEnum.MiddleName.index();
    public static final int LASTNAME = AttributesEnum.LastName.index();
    public static final int ID = AttributesEnum.Id.index();
    public static final int ROLENAME = AttributesEnum.RoleName.index();
    public static final int AREASSOCIATED = AttributesEnum.AreAssociated.index();
    public static final int USERROLELINKUVO1 = AttributesEnum.UserRoleLinkUVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AllUserRolePairUVORowImpl() {
    }

    /**
     * Gets UsersEO entity object.
     * @return the UsersEO
     */
    public EntityImpl getUsersEO() {
        return (EntityImpl) getEntity(ENTITY_USERSEO);
    }

    /**
     * Gets RolesTableEO entity object.
     * @return the RolesTableEO
     */
    public EntityImpl getRolesTableEO() {
        return (EntityImpl) getEntity(ENTITY_ROLESTABLEEO);
    }

    /**
     * Gets the attribute value for USER_ID using the alias name UserId.
     * @return the USER_ID
     */
    public DBSequence getUserId() {
        return (DBSequence) getAttributeInternal(USERID);
    }

    /**
     * Sets <code>value</code> as attribute value for USER_ID using the alias name UserId.
     * @param value value to set the USER_ID
     */
    public void setUserId(DBSequence value) {
        setAttributeInternal(USERID, value);
    }

    /**
     * Gets the attribute value for FIRST_NAME using the alias name FirstName.
     * @return the FIRST_NAME
     */
    public String getFirstName() {
        return (String) getAttributeInternal(FIRSTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for FIRST_NAME using the alias name FirstName.
     * @param value value to set the FIRST_NAME
     */
    public void setFirstName(String value) {
        setAttributeInternal(FIRSTNAME, value);
    }

    /**
     * Gets the attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @return the MIDDLE_NAME
     */
    public String getMiddleName() {
        return (String) getAttributeInternal(MIDDLENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for MIDDLE_NAME using the alias name MiddleName.
     * @param value value to set the MIDDLE_NAME
     */
    public void setMiddleName(String value) {
        setAttributeInternal(MIDDLENAME, value);
    }

    /**
     * Gets the attribute value for LAST_NAME using the alias name LastName.
     * @return the LAST_NAME
     */
    public String getLastName() {
        return (String) getAttributeInternal(LASTNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for LAST_NAME using the alias name LastName.
     * @param value value to set the LAST_NAME
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }

    /**
     * Gets the attribute value for ID using the alias name Id.
     * @return the ID
     */
    public DBSequence getId() {
        return (DBSequence) getAttributeInternal(ID);
    }

    /**
     * Sets <code>value</code> as attribute value for ID using the alias name Id.
     * @param value value to set the ID
     */
    public void setId(DBSequence value) {
        setAttributeInternal(ID, value);
    }

    /**
     * Gets the attribute value for ROLE_NAME using the alias name RoleName.
     * @return the ROLE_NAME
     */
    public String getRoleName() {
        return (String) getAttributeInternal(ROLENAME);
    }

    /**
     * Sets <code>value</code> as attribute value for ROLE_NAME using the alias name RoleName.
     * @param value value to set the ROLE_NAME
     */
    public void setRoleName(String value) {
        setAttributeInternal(ROLENAME, value);
    }

    /**
     * Gets the attribute value for the calculated attribute AreAssociated.
     * @return the AreAssociated
     */
    public Boolean getAreAssociated() {
        return (Boolean) getAttributeInternal(AREASSOCIATED);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UserRoleLinkUVO1.
     */
    public RowSet getUserRoleLinkUVO1() {
        return (RowSet) getAttributeInternal(USERROLELINKUVO1);
    }
    public void setAreAssociated(Boolean value)
      {
        System.out.println("Check");
        Boolean oldValue = getAreAssociated();
        setAttributeInternal(AREASSOCIATED, value);
        if ( oldValue != value )
        {
          if ( value )
          {
            createIntersectionRow(Integer.parseInt(getAttributeInternal(USERID).toString()),Integer.parseInt(getAttributeInternal(ID).toString()) );
          }
          else
          {
            deleteIntersectionRow();
          }
        }
          
       
      }
    
    public void createIntersectionRow(Integer userid,Integer id)
    {
        
        System.out.println("Insert");
        RowSet rowSet=getUserRoleLinkUVO1();
        Row row=rowSet.createRow();
        row.setAttribute("UserId",userid);
        row.setAttribute("RoleId", id);
        rowSet.insertRow(row);
        getDBTransaction().commit();
        
        
    }
    
    public void deleteIntersectionRow()
      {
          
        System.out.println("Delete");
        RowSet rowset = getUserRoleLinkUVO1();
        if ( rowset.getRowCount() == 1 )
        {
          Row atRangeIndex = rowset.getRowAtRangeIndex(0);
          atRangeIndex.remove();
            getDBTransaction().commit();
        }
          
      }
}

