package model.UVO;

import oracle.jbo.Row;
import oracle.jbo.RowSet;
import oracle.jbo.RowSetIterator;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 17 14:11:56 IST 2017
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AssignTeamUVORowImpl extends ViewRowImpl {


    public static final int ENTITY_SALESTEAMSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        ManagerId,
        TeamId,
        TeamName,
        ManagerUVO1,
        UsersUVO1;
        private static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        protected int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int MANAGERID = AttributesEnum.ManagerId.index();
    public static final int TEAMID = AttributesEnum.TeamId.index();
    public static final int TEAMNAME = AttributesEnum.TeamName.index();
    public static final int MANAGERUVO1 = AttributesEnum.ManagerUVO1.index();
    public static final int USERSUVO1 = AttributesEnum.UsersUVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AssignTeamUVORowImpl() {
    }

    /**
     * Gets SalesTeamsEO entity object.
     * @return the SalesTeamsEO
     */
    public EntityImpl getSalesTeamsEO() {
        return (EntityImpl) getEntity(ENTITY_SALESTEAMSEO);
    }

    /**
     * Gets the attribute value for MANAGER_ID using the alias name ManagerId.
     * @return the MANAGER_ID
     */
    public Long getManagerId() {
        return (Long) getAttributeInternal(MANAGERID);
    }

    /**
     * Sets <code>value</code> as attribute value for MANAGER_ID using the alias name ManagerId.
     * @param value value to set the MANAGER_ID
     */
   

    /**
     * Gets the attribute value for TEAM_ID using the alias name TeamId.
     * @return the TEAM_ID
     */
    public Long getTeamId() {
        return (Long) getAttributeInternal(TEAMID);
    }

    /**
     * Sets <code>value</code> as attribute value for TEAM_ID using the alias name TeamId.
     * @param value value to set the TEAM_ID
     */
    public void setTeamId(Long value) {
        setAttributeInternal(TEAMID, value);
    }

    /**
     * Gets the attribute value for TEAM_NAME using the alias name TeamName.
     * @return the TEAM_NAME
     */
    public String getTeamName() {
        return (String) getAttributeInternal(TEAMNAME);
    }

    /**
     * Sets <code>value</code> as attribute value for TEAM_NAME using the alias name TeamName.
     * @param value value to set the TEAM_NAME
     */
    public void setTeamName(String value) {
        setAttributeInternal(TEAMNAME, value);
    }

    /**
     * Gets the view accessor <code>RowSet</code> ManagerUVO1.
     */
    public RowSet getManagerUVO1() {
        return (RowSet) getAttributeInternal(MANAGERUVO1);
    }

    /**
     * Gets the view accessor <code>RowSet</code> UsersUVO1.
     */
    public RowSet getUsersUVO1() {
        return (RowSet) getAttributeInternal(USERSUVO1);
    }

    public void setManagerId(Long value) {
        
        if(getManagerId()==null)
        {
        setAttributeInternal(MANAGERID, value);
        RowSet rowSet=getUsersUVO1();
        Row row=null;;
        int flag=0;
            
        while(rowSet.hasNext())
            {
                row=rowSet.next(); 
                System.out.println(value+" "+row.getAttribute("UserId"));
                if(Integer.parseInt(row.getAttribute("UserId").toString())==value.intValue())
                {
                    System.out.println("WHATSAAAAAAAAAAPBROOOOOOOOOOOO");
                    flag=1;
                    break;
                }
                
            }
        if(flag==1){
            row.setAttribute("SalesTeamId", getTeamId());
            rowSet.executeQuery();
            System.out.println("WHATSAAAAAAAAAAPBROOOOOOOOOOOO");
            
        }
        }
        else {
            long oldvalue=getManagerId();
            setAttributeInternal(MANAGERID, value);
            RowSet rowSet1=getManagerUVO1();
            Row row1=null;
            int flag1=0;
            while(rowSet1.hasNext()) {
                row1=rowSet1.next();
                if((Long)row1.getAttribute("UserId")==oldvalue)
                {
                    flag1=1;
                    break;
                }
            }
            row1.setAttribute("SalesTeamId", null);
            RowSet rowSet=getUsersUVO1();
            Row row=null;;
            int flag=0;
            while(rowSet.hasNext())
                {
                    row=rowSet.next();   
                    if(row.getAttribute("UserId")==value)
                    {
                        flag=1;
                        break;
                    }
                    
                }
            if(flag==1)
                row.setAttribute("SalesTeamId", getTeamId());
        }
        
        getDBTransaction().commit();
    }
        
    
}

